security:
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # firewall for the admin area
        admin:
            pattern:    /admin(.*)
            context:    user
            form_login:
                provider:     fos_userbundle
                login_path:   /admin/login
                use_forward:  false
                check_path:   /admin/login_check
                failure_path: null
                default_target_path: /admin/dashboard
            logout:
                path:   /admin/logout
                target: /admin/login
            anonymous:  true

        # firewall for the public area
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                default_target_path: /
            logout:              true
            anonymous:           true

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, SONATA]
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_AUTHOR:      [ROLE_USER]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
            - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    # providers:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    #in_memory: { memory: ~ }
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

    access_control:
        # public login page needs to be accessed without credential
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
